#!/bin/bash

# Alias: TCP port number and listening address for MongoDB
# Menu: Addons
# Description: 
#  Configure the TCP port used for the MongoDB
#  process of this site. This option is only useful if 
#  the CORE is set to "shinken" and MONGODB is set to "on".
#  


port_is_used ()
{
    local PORT=$1
    ls /omd/sites/*/etc/omd/site.conf >/dev/null 2>&1 || return 1
    for conf in /omd/sites/*/etc/omd/site.conf
    do
        [ $conf != /omd/sites/$OMD_SITE/etc/omd/site.conf ] || continue
        if grep -qx "CONFIG_MONGODB_TCP_PORT='$PORT'" < $conf > /dev/null 2>&1 ; then
            return 0
        fi
    done
    return 1
}


next_free_hook ()
{
    local PORT=$1
    while port_is_used $PORT
    do
        PORT=$((PORT + 1))
    done
    echo "$PORT"
}


case "$1" in
    default)
        # Scan for a free port number by looking at the
        # configuration of the other sites...
        PORT=$(next_free_hook 27017)
        echo "$PORT"
    ;;
    choices)
        echo "([1-9][0-9]{0,5})|([a-zA-Z0-9\.\-]*:[1-9][0-9]{0,5})"
    ;;
    set)
        SELECTED_PORT=${2:=localhost:27017}
        if [ "${SELECTED_PORT##*:}" = "${SELECTED_PORT%%:*}" ]; then
            BIND_IP=0.0.0.0
        elif [ "${SELECTED_PORT%%:*}" = "localhost" ]; then
            SELECTED_PORT=${SELECTED_PORT##*:}
            BIND_IP=127.0.0.1
        else
            BIND_IP=${SELECTED_PORT%%:*}
            SELECTED_PORT=${SELECTED_PORT##*:}
        fi
        PORT=$(next_free_hook $SELECTED_PORT)
        CHECK_PORT=${PORT##*:}
        if [ "$CHECK_PORT" != "$SELECTED_PORT" ] ; then
            echo "MongoDB port $SELECTED_PORT is in use. I've choosen $PORT instead." >&2
            echo "$PORT"
        fi
        cat <<EOF > $OMD_ROOT/etc/mongodb/mongod.d/port.conf
port = $PORT
bind_ip = $BIND_IP
EOF
    ;;
    depends)
        [ "$CONFIG_MONGODB" = on ]
    ;;
esac
